@page
@model InteractiveModel
@{
    ViewData["Title"] = "Interactive Elements";
}

<div class="container">
    <h2>Interactive Elements</h2>
    <p>This page demonstrates various interactive UI elements for Playwright testing.</p>
    
    <div class="row">
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Modals and Alerts</h5>
                </div>
                <div class="card-body">
                    <button type="button" class="btn btn-primary me-2" data-bs-toggle="modal" 
                            data-bs-target="#exampleModal" data-testid="open-modal-button">
                        Open Modal
                    </button>
                    <button type="button" class="btn btn-warning me-2" 
                            onclick="alert('This is a JavaScript alert!')" data-testid="alert-button">
                        Show Alert
                    </button>
                    <button type="button" class="btn btn-info" 
                            onclick="showConfirm()" data-testid="confirm-button">
                        Show Confirm
                    </button>
                </div>
            </div>
            
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Dynamic Content</h5>
                </div>
                <div class="card-body">
                    <button type="button" class="btn btn-success" 
                            onclick="loadContent()" data-testid="load-content-button">
                        Load Content
                    </button>
                    <div id="dynamicContent" data-testid="dynamic-content" class="mt-3"></div>
                </div>
            </div>
        </div>
        
        <div class="col-md-6">
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Form Elements</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="slider" class="form-label">Range Slider: <span id="sliderValue" data-testid="slider-value">50</span></label>
                        <input type="range" class="form-range" min="0" max="100" value="50" 
                               id="slider" data-testid="range-slider">
                    </div>
                    
                    <div class="mb-3">
                        <label for="colorPicker" class="form-label">Color Picker</label>
                        <input type="color" class="form-control form-control-color" 
                               id="colorPicker" value="#563d7c" data-testid="color-picker">
                    </div>
                    
                    <div class="mb-3">
                        <label for="datePicker" class="form-label">Date Picker</label>
                        <input type="date" class="form-control" id="datePicker" data-testid="date-picker">
                    </div>
                    
                    <div class="mb-3">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" role="switch" 
                                   id="toggleSwitch" data-testid="toggle-switch">
                            <label class="form-check-label" for="toggleSwitch">
                                Toggle Switch
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="card mb-4">
                <div class="card-header">
                    <h5>Drag and Drop</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-6">
                            <div class="border p-3 text-center" style="min-height: 150px;" 
                                 ondrop="drop(event)" ondragover="allowDrop(event)" data-testid="drop-zone-1">
                                <h6>Drop Zone 1</h6>
                                <div id="draggable1" draggable="true" ondragstart="drag(event)" 
                                     class="bg-primary text-white p-2 rounded mt-2 d-inline-block" 
                                     data-testid="draggable-item-1">
                                    Drag me!
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="border p-3 text-center" style="min-height: 150px;" 
                                 ondrop="drop(event)" ondragover="allowDrop(event)" data-testid="drop-zone-2">
                                <h6>Drop Zone 2</h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5>Tabs and Accordion</h5>
                </div>
                <div class="card-body">
                    <!-- Tabs -->
                    <ul class="nav nav-tabs mb-3" id="myTab" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="home-tab" data-bs-toggle="tab" 
                                    data-bs-target="#home-tab-pane" type="button" role="tab" 
                                    data-testid="tab-1">Tab 1</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="profile-tab" data-bs-toggle="tab" 
                                    data-bs-target="#profile-tab-pane" type="button" role="tab" 
                                    data-testid="tab-2">Tab 2</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="contact-tab" data-bs-toggle="tab" 
                                    data-bs-target="#contact-tab-pane" type="button" role="tab" 
                                    data-testid="tab-3">Tab 3</button>
                        </li>
                    </ul>
                    <div class="tab-content" id="myTabContent">
                        <div class="tab-pane fade show active" id="home-tab-pane" role="tabpanel" 
                             data-testid="tab-content-1">
                            <p>This is the content for Tab 1. Perfect for testing tab navigation.</p>
                        </div>
                        <div class="tab-pane fade" id="profile-tab-pane" role="tabpanel" 
                             data-testid="tab-content-2">
                            <p>This is the content for Tab 2. Great for testing dynamic content loading.</p>
                        </div>
                        <div class="tab-pane fade" id="contact-tab-pane" role="tabpanel" 
                             data-testid="tab-content-3">
                            <p>This is the content for Tab 3. Useful for testing multiple tab interactions.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="mt-4">
        <a href="/" class="btn btn-secondary" data-testid="home-link">Back to Home</a>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" data-testid="test-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Test Modal</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" data-testid="close-modal-x"></button>
            </div>
            <div class="modal-body" data-testid="modal-body">
                <p>This is a test modal for Playwright automation testing.</p>
                <div class="mb-3">
                    <label for="modalInput" class="form-label">Enter some text:</label>
                    <input type="text" class="form-control" id="modalInput" data-testid="modal-input">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" data-testid="close-modal-button">Close</button>
                <button type="button" class="btn btn-primary" data-testid="save-modal-button">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<script>
// Slider value update
document.getElementById('slider').addEventListener('input', function() {
    document.getElementById('sliderValue').textContent = this.value;
});

// Confirm dialog
function showConfirm() {
    const result = confirm('Are you sure you want to proceed?');
    if (result) {
        alert('You clicked OK!');
    } else {
        alert('You clicked Cancel!');
    }
}

// Dynamic content loading
function loadContent() {
    const content = document.getElementById('dynamicContent');
    content.innerHTML = '<div class="alert alert-info">Content loaded dynamically! Timestamp: ' + new Date().toLocaleTimeString() + '</div>';
}

// Drag and drop functionality
function allowDrop(ev) {
    ev.preventDefault();
}

function drag(ev) {
    ev.dataTransfer.setData("text", ev.target.id);
}

function drop(ev) {
    ev.preventDefault();
    const data = ev.dataTransfer.getData("text");
    const draggedElement = document.getElementById(data);
    
    // Only append if dropping in a different zone
    if (ev.target.getAttribute('data-testid') && ev.target !== draggedElement.parentNode) {
        ev.target.appendChild(draggedElement);
    }
}
</script>
